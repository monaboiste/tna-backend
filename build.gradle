plugins {
    id 'org.springframework.boot' version '2.4.5'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'co.uzzu.dotenv.gradle' version '1.1.0'
    id 'idea'
    id 'java'
}

group = 'pl.zgora.uz.wiea'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
    mavenCentral()
}

test {
    useJUnitPlatform()
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    integrationTestImplementation.extendsFrom testImplementation
    integrationTestRuntimeOnly.extendsFrom testRuntimeOnly
}

sourceSets {
    integrationTest {
        java {
            compileClasspath += sourceSets.main.output
            runtimeClasspath += sourceSets.main.output
        }
        resources.srcDir file('src/integrationTest/resources')
    }
}

idea {
    module {
        testSourceDirs += project.sourceSets.integrationTest.java.srcDirs
        testSourceDirs += project.sourceSets.integrationTest.resources.srcDirs
    }
}

tasks.processIntegrationTestResources.doFirst {
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
}

task integrationTest(type: Test) {
    group = 'verification'
    description = 'Runs the integration tests.'

    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath
    include("**/*IntegrationTest.java")
    outputs.upToDateWhen { false }
    mustRunAfter test
}

check.dependsOn integrationTest

bootRun {
    systemProperties = System.properties as Map<String, ?>
    // combined with co.uzzu.dotenv.gradle plugin allows to use .env file
    environment = [
            'TNA_ADMIN_LOGIN': env.TNA_ADMIN_LOGIN.value,
            'TNA_ADMIN_PASSWORD': env.TNA_ADMIN_PASSWORD.value,
            'POSTGRES_HOST': env.POSTGRES_HOST.value,
            'POSTGRES_PORT': env.POSTGRES_PORT.value,
            'POSTGRES_DB': env.POSTGRES_DB.value,
            'POSTGRES_USER': env.POSTGRES_USER.value,
            'POSTGRES_PASSWORD': env.POSTGRES_PASSWORD.value
    ]
}

dependencies {
    // spring boot starters
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-security'

    // error messages
    implementation 'me.alidg:errors-spring-boot-starter:1.4.0'

    // preprocessor
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

    // test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    integrationTestImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    integrationTestImplementation 'org.springframework.security:spring-security-test'

    // test database TODO: to be replaced with postgresql
    testImplementation 'com.h2database:h2'
    integrationTestImplementation 'com.h2database:h2'

    // database prod
    runtimeOnly 'org.postgresql:postgresql'
}
